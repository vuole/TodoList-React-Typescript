[{"D:\\Thuc tap cong ty NCC\\Learn React\\BT React\\my-app-react-tyscript\\src\\index.tsx":"1","D:\\Thuc tap cong ty NCC\\Learn React\\BT React\\my-app-react-tyscript\\src\\reportWebVitals.ts":"2","D:\\Thuc tap cong ty NCC\\Learn React\\BT React\\my-app-react-tyscript\\src\\App.tsx":"3","D:\\Thuc tap cong ty NCC\\Learn React\\BT React\\my-app-react-tyscript\\src\\component\\ContentTodoList.tsx":"4","D:\\Thuc tap cong ty NCC\\Learn React\\BT React\\my-app-react-tyscript\\src\\component\\HeaderTodoList.tsx":"5","D:\\Thuc tap cong ty NCC\\Learn React\\BT React\\my-app-react-tyscript\\src\\component\\FooterTodoList.tsx":"6","D:\\Thuc tap cong ty NCC\\Learn React\\BT React\\my-app-react-tyscript\\src\\component\\ModalAddTodo.tsx":"7","D:\\Thuc tap cong ty NCC\\Learn React\\BT React\\my-app-react-tyscript\\src\\component\\DataTodoListRow.tsx":"8","D:\\Thuc tap cong ty NCC\\Learn React\\BT React\\my-app-react-tyscript\\src\\component\\AlertDialog.tsx":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":2579,"mtime":1609750487506,"results":"13","hashOfConfig":"11"},{"size":876,"mtime":1609756454777,"results":"14","hashOfConfig":"11"},{"size":756,"mtime":1609755894543,"results":"15","hashOfConfig":"11"},{"size":1333,"mtime":1609756187911,"results":"16","hashOfConfig":"11"},{"size":5667,"mtime":1609814249187,"results":"17","hashOfConfig":"11"},{"size":4048,"mtime":1609815288676,"results":"18","hashOfConfig":"11"},{"size":2711,"mtime":1609814618847,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"9l6dzx",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Thuc tap cong ty NCC\\Learn React\\BT React\\my-app-react-tyscript\\src\\index.tsx",[],["43","44"],"D:\\Thuc tap cong ty NCC\\Learn React\\BT React\\my-app-react-tyscript\\src\\reportWebVitals.ts",[],"D:\\Thuc tap cong ty NCC\\Learn React\\BT React\\my-app-react-tyscript\\src\\App.tsx",["45","46"],"import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport HeaderTodoList from './component/HeaderTodoList';\nimport ContentTodoList from './component/ContentTodoList';\nimport { Todo } from './model/type/todo';\n\nfunction dataFilter(todoList: Todo[], filter: string): Todo[] {\n  if (filter === \"all\") {\n    return todoList.filter(e => { return true });\n  } else if (filter === \"active\") {\n    return todoList.filter(e => { return (e.completed === false) });\n  } else if (filter === \"completed\") {\n    return todoList.filter(e => { return (e.completed === true) });\n  };\n  return [];\n}\n\nfunction App() {\n  const [todoList, setTodoList] = useState<Todo[]>([]);\n  const [filter, setFilter] = useState<string>(\"all\");\n\n  const handleDataChange = (todoListChange: Todo[]) => {\n    setTodoList(todoListChange);\n  };\n\n  const handleChangeFilter = (status: string) => setFilter(status);\n\n  useEffect(() => {\n    fetch(\"http://localhost:3001/todoList\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setTodoList(result.data);\n        },\n        (error) => {\n          console.log(\"error: \", error);\n        }\n      )\n  }, [])\n\n  return (\n    <div className=\"package\">\n      <div className=\"todo-page\">\n        <HeaderTodoList onDataChange={handleDataChange} todoList={todoList} />\n        <ContentTodoList todoListFilter={dataFilter(todoList, filter)} todoList={todoList} filter={filter}\n          onDataChange={handleDataChange} onChangeFilter={handleChangeFilter} />\n      </div>\n    </div>\n  );\n}\n\nconst listData = [\n  { id: 1, todoName: \"Task a\", completed: false, type: \"TYPE A\", deadline: \"2021-01-04T16:08\" },\n  { id: 2, todoName: \"Task b\", completed: false, type: \"TYPE A\", deadline: \"2021-02-04T16:08\" },\n  { id: 3, todoName: \"Task c\", completed: false, type: \"TYPE A\", deadline: \"2021-03-04T16:08\" },\n  { id: 4, todoName: \"Task d\", completed: true, type: \"TYPE B\", deadline: \"2021-04-04T16:08\" },\n  { id: 5, todoName: \"Task e\", completed: true, type: \"TYPE B\", deadline: \"2021-05-04T16:08\" },\n  { id: 6, todoName: \"Task f\", completed: true, type: \"TYPE B\", deadline: \"2021-06-04T16:08\" },\n  { id: 7, todoName: \"Task g\", completed: true, type: \"TYPE C\", deadline: \"2021-07-04T16:08\" },\n  { id: 8, todoName: \"Task h\", completed: true, type: \"TYPE C\", deadline: \"2021-08-04T16:08\" },\n  { id: 9, todoName: \"Task m\", completed: true, type: \"TYPE C\", deadline: \"2021-09-04T16:08\" },\n  { id: 10, todoName: \"Task n\", completed: true, type: \"TYPE C\", deadline: \"2021-10-04T16:08\" }\n];\n\nexport default App;\n","D:\\Thuc tap cong ty NCC\\Learn React\\BT React\\my-app-react-tyscript\\src\\component\\ContentTodoList.tsx",[],"D:\\Thuc tap cong ty NCC\\Learn React\\BT React\\my-app-react-tyscript\\src\\component\\HeaderTodoList.tsx",["47"],"import '../App.css';\r\nimport React from 'react';\r\nimport ModalAddTodo from './ModalAddTodo';\r\nimport { PropsHeaderTodoList } from '../model/type/todo';\r\nimport { Todo } from '../model/type/todo';\r\n\r\nfunction HeaderTodoList(props: PropsHeaderTodoList) {\r\n    return (\r\n        <div className=\"header-todolist\">\r\n            <a data-toggle=\"collapse\" href=\"#collapseOne\">\r\n                <i className='fas fa-angle-down'></i>\r\n      Todo List\r\n        {/* <form>\r\n                    <input className=\"search\" type=\"text\" name=\"search\" placeholder=\"Search..\" />\r\n                </form> */}\r\n            </a>\r\n            <ModalAddTodo todoList={props.todoList} onDataChange={props.onDataChange} />\r\n        </div>\r\n    );\r\n}\r\nexport default HeaderTodoList;","D:\\Thuc tap cong ty NCC\\Learn React\\BT React\\my-app-react-tyscript\\src\\component\\FooterTodoList.tsx",["48"],"import '../App.css';\r\nimport React from 'react';\r\nimport AlertDialog from './AlertDialog';\r\nimport { PropsFooterTodoList } from '../model/type/todo';\r\nimport { Todo } from '../model/type/todo';\r\n\r\nfunction FooterTodoList(props: PropsFooterTodoList) {\r\n\r\n    const handleChangeFilter = (status: string) => {\r\n        // console.log(\"footer\", status)\r\n        props.onChangeFilter(status);\r\n    }\r\n\r\n    const countItemLeft = () => {\r\n        const todoListFilter: Todo[] = props.todoListFilter;\r\n        let dem = 0;\r\n        todoListFilter.forEach(e => {\r\n            if (e.completed === false) {\r\n                dem++;\r\n            };\r\n        });\r\n        return dem;\r\n    };\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"count-item\">{countItemLeft()} items left</div>\r\n            <div className=\"filter\">\r\n                <div onClick={() => handleChangeFilter(\"all\")} className={props.filter === \"all\" ? \"selected\" : \"\"}>All</div>\r\n                <div onClick={() => handleChangeFilter(\"active\")} className={props.filter === \"active\" ? \"selected\" : \"\"}>Active</div>\r\n                <div onClick={() => handleChangeFilter(\"completed\")} className={props.filter === \"completed\" ? \"selected\" : \"\"}> Completed</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FooterTodoList;","D:\\Thuc tap cong ty NCC\\Learn React\\BT React\\my-app-react-tyscript\\src\\component\\ModalAddTodo.tsx",["49","50","51","52","53","54"],"import '../App.css';\r\nimport React, { useState, useEffect } from 'react';\r\n// import { Button, Modal } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { PropsModalAddTodo } from '../model/type/todo';\r\nimport { Todo } from '../model/type/todo';\r\n\r\nfunction ModalAddTodo(props: PropsModalAddTodo) {\r\n    const [show, setShow] = useState(false);\r\n    const [fields, setFields] = useState<any>({});\r\n    const [errors, setErrors] = useState<any>({});\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    const handleShow = () => {\r\n        setFields({});\r\n        setErrors({});\r\n        setShow(true);\r\n    };\r\n\r\n    const handleValidation = () => {\r\n        let pushErrors: any = {};\r\n        let formIsValid = true;\r\n\r\n        if (fields[\"todoName\"] == undefined) {\r\n            pushErrors[\"todoName\"] = \"\";\r\n            formIsValid = false;\r\n        } else if (fields[\"todoName\"].length === 0) {\r\n            pushErrors[\"todoName\"] = \"Todo name is required\";\r\n            formIsValid = false;\r\n        }\r\n        if (fields[\"type\"] == undefined) {\r\n            pushErrors[\"type\"] = \"\";\r\n            formIsValid = false;\r\n        } else if (fields[\"type\"].length === 0) {\r\n            pushErrors[\"type\"] = \"Type is required\";\r\n            formIsValid = false;\r\n        };\r\n        if (fields[\"deadline\"] == undefined) {\r\n            pushErrors[\"deadline\"] = \"\";\r\n            formIsValid = false;\r\n        } else if (fields[\"deadline\"].length === 0) {\r\n            pushErrors[\"deadline\"] = \"Deadline is required\";\r\n            formIsValid = false;\r\n        } else if (Date.parse(fields[\"deadline\"]) < (new Date()).getTime()) {\r\n            let d = new Date();\r\n            // console.log(d.getTime());\r\n            pushErrors[\"deadline\"] = \"Cannot choose a time in the past\";\r\n            formIsValid = false;\r\n        };\r\n        pushErrors[\"formIsValid\"] = formIsValid;\r\n        setErrors(pushErrors);\r\n        // console.log(\"error\", errors)\r\n        // return formIsValid;\r\n    };\r\n\r\n    const handleChangeInput = (event: any) => {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        console.log(value)\r\n        const name = target.name;\r\n        fields[name] = value;\r\n\r\n        setFields(fields);\r\n        handleValidation();\r\n\r\n        // console.log(fields);\r\n    };\r\n\r\n    const saveAddTodo = () => {\r\n        const todoList = props.todoList;\r\n        console.log(\"fields\", fields);\r\n        fetch('http://localhost:3001/todoList', {\r\n            method: 'POST',\r\n            body: JSON.stringify(fields),\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },\r\n        })\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                console.log(result);\r\n                todoList.push(result.data);\r\n                const todoListChange = todoList.slice();\r\n                props.onDataChange(todoListChange);\r\n            },\r\n                (error) => {\r\n                    console.log(\"error: \", error);\r\n                });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"primary\" onClick={handleShow}>\r\n                <i className='fas fa-plus'></i>\r\n            </Button>\r\n\r\n            <Modal show={show} onHide={handleClose} animation={false}>\r\n                {/* <Modal.Header closeButton> */}\r\n                <Modal.Header>\r\n                    <Modal.Title>Add Todo</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"form-group\">\r\n                        <label>Todo Name</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"todoName\" defaultValue={fields[\"todoName\"] || ''}\r\n                            onChange={handleChangeInput} onBlur={handleChangeInput} />\r\n                        <small>{errors[\"todoName\"] || ''}</small>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Type</label>\r\n                        <select className=\"form-control\" name=\"type\" defaultValue={fields[\"type\"] || ''}\r\n                            onChange={handleChangeInput} onBlur={handleChangeInput}>\r\n                            <option value=\"\">Open this select menu</option>\r\n                            <option value=\"TYPE A\">Type A</option>\r\n                            <option value=\"TYPE B\">Type B</option>\r\n                            <option value=\"TYPE C\">Type C</option>\r\n                        </select>\r\n                        <small>{errors[\"type\"] || ''}</small>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Deadline</label>\r\n                        <input className=\"form-control\" type=\"datetime-local\" name=\"deadline\" defaultValue={fields[\"deadline\"] || ''}\r\n                            onChange={handleChangeInput} onBlur={handleChangeInput} />\r\n                        <small>{errors[\"deadline\"] || ''}</small>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Cancel\r\n            </Button>\r\n                    <Button variant=\"primary\" disabled={(errors[\"formIsValid\"] || false) === false ? true : false} onClick={() => { handleClose(); saveAddTodo(); }}>\r\n                        Save\r\n            </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\nexport default ModalAddTodo;","D:\\Thuc tap cong ty NCC\\Learn React\\BT React\\my-app-react-tyscript\\src\\component\\DataTodoListRow.tsx",["55","56"],"D:\\Thuc tap cong ty NCC\\Learn React\\BT React\\my-app-react-tyscript\\src\\component\\AlertDialog.tsx",["57","58","59"],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":3,"column":8,"nodeType":"66","messageId":"67","endLine":3,"endColumn":16},{"ruleId":"64","severity":1,"message":"68","line":53,"column":7,"nodeType":"66","messageId":"67","endLine":53,"endColumn":15},{"ruleId":"64","severity":1,"message":"69","line":5,"column":10,"nodeType":"66","messageId":"67","endLine":5,"endColumn":14},{"ruleId":"64","severity":1,"message":"70","line":3,"column":8,"nodeType":"66","messageId":"67","endLine":3,"endColumn":19},{"ruleId":"64","severity":1,"message":"71","line":2,"column":27,"nodeType":"66","messageId":"67","endLine":2,"endColumn":36},{"ruleId":"64","severity":1,"message":"69","line":7,"column":10,"nodeType":"66","messageId":"67","endLine":7,"endColumn":14},{"ruleId":"72","severity":1,"message":"73","line":26,"column":32,"nodeType":"74","messageId":"75","endLine":26,"endColumn":34},{"ruleId":"72","severity":1,"message":"73","line":33,"column":28,"nodeType":"74","messageId":"75","endLine":33,"endColumn":30},{"ruleId":"72","severity":1,"message":"73","line":40,"column":32,"nodeType":"74","messageId":"75","endLine":40,"endColumn":34},{"ruleId":"64","severity":1,"message":"76","line":47,"column":17,"nodeType":"66","messageId":"67","endLine":47,"endColumn":18},{"ruleId":"64","severity":1,"message":"77","line":2,"column":38,"nodeType":"66","messageId":"67","endLine":2,"endColumn":44},{"ruleId":"72","severity":1,"message":"73","line":32,"column":72,"nodeType":"74","messageId":"75","endLine":32,"endColumn":74},{"ruleId":"64","severity":1,"message":"78","line":5,"column":8,"nodeType":"66","messageId":"67","endLine":5,"endColumn":21},{"ruleId":"64","severity":1,"message":"79","line":6,"column":8,"nodeType":"66","messageId":"67","endLine":6,"endColumn":25},{"ruleId":"80","severity":1,"message":"81","line":45,"column":46,"nodeType":"82","endLine":45,"endColumn":104},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"@typescript-eslint/no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'listData' is assigned a value but never used.","'Todo' is defined but never used.","'AlertDialog' is defined but never used.","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'d' is assigned a value but never used.","'useRef' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]